{
  "contractName": "BitflixNFT",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "token_infos",
      "outputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "class_id",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "user_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "class_id",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "name": "createNFT",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getNFT",
      "outputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "class_id",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "size",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"class_id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"size\",\"type\":\"uint8\"}],\"name\":\"createNFT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getNFT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"class_id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"size\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"token_infos\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"class_id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"size\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._\"},\"createNFT(address,string,uint8,uint8)\":{\"details\":\"Creates a new NFT\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"getNFT(uint256)\":{\"details\":\"Gets a NFT\",\"return\":\"The title and the size of the NFT\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"BitflixNFT: a ERC721 token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/yxf/app/bitflix-nft-marketplace/contracts/ERC721/BitflixNFT.sol\":\"BitflixNFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/yxf/app/bitflix-nft-marketplace/contracts/ERC721/BitflixNFT.sol\":{\"keccak256\":\"0x23227c5041b794e661b2c1d1d3470ed66c42d10e2283b20cb456bfc2d01930c0\",\"urls\":[\"bzz-raw://f6f7f5ec87503d2e7660ddde1657ef0202c578c8c145724986661ce8f20a2e76\",\"dweb:/ipfs/QmZQsfUtkybKqzQRjSrry2w4SdJTkMaTvnqoYZBify8xYT\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzz-raw://999ab32a6498d8ad8db61d47c3774aae2ff919acceebe2aeb50879bef62642c3\",\"dweb:/ipfs/QmephAYF5hoymu9qCFK6mURM2kZJCxU4ntUb4KTf1miVPT\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1a1c02bc2487c763ad240f6b6440ec9dcb84870879aea3ed2a6b9cd300b637c7\",\"urls\":[\"bzz-raw://e6351696020fecf1c1b09437a2961cbdc3e1579238a9573b8577b58af463eeb6\",\"dweb:/ipfs/QmTg7UxUcuENko38JL2Pb2aqXkWgqW1xPDbJwmfo3RVrrV\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x28f4e41b86db783cd8daf9fdec839ce5930332b60f6dc9ac4992dfb584997e79\",\"urls\":[\"bzz-raw://6f1b545ec9e1f0284e86ddd4ffff353e1ab5e026bbbfaa2a5d2d791c39d7afd7\",\"dweb:/ipfs/Qmf9rVfj6LreiE7NHkkT1S7eLbSQDDY1gKd9XWERx2AN7W\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x307231237999e19b618a03e7ecff1cee2a189dd019ebd203e5e43a63a7ac8aa3\",\"urls\":[\"bzz-raw://9a169446f024a24c3e5146cbeefea6be3bbbe9ba836f98f9d0c64af9f10773c4\",\"dweb:/ipfs/QmWibincTepM31suKeF6bd3shbPGjc9E7uULaXQBY1eNX5\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xe454aab4894511c610fb28e63e212608004921c10dfbffaf0b0e18a2c3b204eb\",\"urls\":[\"bzz-raw://cbb33c4aa1ba8470e389a79702b1b0450c03acd0e9471ed3ae5d566a958d36a4\",\"dweb:/ipfs/QmXryp8Ncftr8WYt7vWwoFQVKnbxtQ7dQBHzfzgWWYGisK\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzz-raw://0f314963ab26fb65c6f364d57900f0f1aa8f6aeb4396e327e5e5c646815f060e\",\"dweb:/ipfs/Qmf6eSUtRUF4YDxGyhQq7TVDYzuHcYEvk9Us3RVy5iZQVH\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x5c573acd6c7b98d71f3c1c44d63dc17400b0fd7b26a52c9fded43b8b533dc4ec\",\"urls\":[\"bzz-raw://e23af54444d2dbfae58895339eb7b189e1ba5d0b7abde63716e7ef7da23b2fde\",\"dweb:/ipfs/QmZva7dE1SMd1yyizzc6ivSoBXXwpNveLV7iFNATNpq68Y\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzz-raw://a8024c00e34efaf328f9592e76823c79f25fa0f6006bdf4a1e7fea204afd4773\",\"dweb:/ipfs/QmZns9jTr7843njq3J2iL2LLoWXK5mdzN1bDGd9GL3ahhD\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604080518082018252600a815269109a5d199b1a5e13919560b21b602080830191909152825180840190935260048352631093919560e21b908301529081816200006c6301ffc9a760e01b6001600160e01b036200015316565b620000876380ac58cd60e01b6001600160e01b036200015316565b620000a263780e9d6360e01b6001600160e01b036200015316565b8151620000b7906009906020850190620001dd565b508051620000cd90600a906020840190620001dd565b50620000e9635b5e139f60e01b6001600160e01b036200015316565b505050506000620000ff620001d860201b60201c565b600d80546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506200027f565b6001600160e01b03198082161415620001b3576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200022057805160ff191683800117855562000250565b8280016001018555821562000250579182015b828111156200025057825182559160200191906001019062000233565b506200025e92915062000262565b5090565b620001da91905b808211156200025e576000815560010162000269565b61202f806200028f6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80636352211e116100c357806395d89b411161007c57806395d89b4114610505578063a22cb4651461050d578063b88d4fde1461053b578063c87b56dd14610601578063e985e9c51461061e578063f2fde38b1461064c57610158565b80636352211e146104a25780636c0360eb146104bf57806370a08231146104c7578063715018a6146104ed5780638da5cb5b146104f55780638f32d59b146104fd57610158565b80632f745c59116101155780632f745c59146102cc57806342842e0e146102f85780634f6ccce71461032e578063576f7ea71461034b5780635c1d7a6a146103fa5780635e82866e1461048557610158565b806301ffc9a71461015d57806306fdde0314610198578063081812fc14610215578063095ea7b31461024e57806318160ddd1461027c57806323b872dd14610296575b600080fd5b6101846004803603602081101561017357600080fd5b50356001600160e01b031916610672565b604080519115158252519081900360200190f35b6101a0610695565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101da5781810151838201526020016101c2565b50505050905090810190601f1680156102075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102326004803603602081101561022b57600080fd5b503561072c565b604080516001600160a01b039092168252519081900360200190f35b61027a6004803603604081101561026457600080fd5b506001600160a01b03813516906020013561078e565b005b6102846108b6565b60408051918252519081900360200190f35b61027a600480360360608110156102ac57600080fd5b506001600160a01b038135811691602081013590911690604001356108bc565b610284600480360360408110156102e257600080fd5b506001600160a01b038135169060200135610918565b61027a6004803603606081101561030e57600080fd5b506001600160a01b03813581169160208101359091169060400135610997565b6102846004803603602081101561034457600080fd5b50356109b2565b6103686004803603602081101561036157600080fd5b5035610a18565b60405180806020018460ff1660ff1681526020018360ff1660ff168152602001828103825285818151815260200191508051906020019080838360005b838110156103bd5781810151838201526020016103a5565b50505050905090810190601f1680156103ea5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61027a6004803603608081101561041057600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561043b57600080fd5b82018360208201111561044d57600080fd5b8035906020019184600183028401116401000000008311171561046f57600080fd5b919350915060ff81358116916020013516610b3c565b6103686004803603602081101561049b57600080fd5b5035610c6e565b610232600480360360208110156104b857600080fd5b5035610d2d565b6101a0610d87565b610284600480360360208110156104dd57600080fd5b50356001600160a01b0316610de8565b61027a610e50565b610232610ef3565b610184610f02565b6101a0610f28565b61027a6004803603604081101561052357600080fd5b506001600160a01b0381351690602001351515610f89565b61027a6004803603608081101561055157600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561058c57600080fd5b82018360208201111561059e57600080fd5b803590602001918460018302840111640100000000831117156105c057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061108e945050505050565b6101a06004803603602081101561061757600080fd5b50356110ec565b6101846004803603604081101561063457600080fd5b506001600160a01b03813581169160200135166112b8565b61027a6004803603602081101561066257600080fd5b50356001600160a01b03166112e6565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107215780601f106106f657610100808354040283529160200191610721565b820191906000526020600020905b81548152906001019060200180831161070457829003601f168201915b505050505090505b90565b60006107378261134b565b6107725760405162461bcd60e51b815260040180806020018281038252602c815260200180611ef9602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b600061079982610d2d565b9050806001600160a01b0316836001600160a01b031614156107ec5760405162461bcd60e51b8152600401808060200182810382526021815260200180611f7d6021913960400191505060405180910390fd5b806001600160a01b03166107fe611368565b6001600160a01b0316148061081f575061081f8161081a611368565b6112b8565b61085a5760405162461bcd60e51b8152600401808060200182810382526038815260200180611e6e6038913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b6108cd6108c7611368565b8261136c565b6109085760405162461bcd60e51b8152600401808060200182810382526031815260200180611f9e6031913960400191505060405180910390fd5b610913838383611410565b505050565b600061092383610de8565b82106109605760405162461bcd60e51b815260040180806020018281038252602b815260200180611d9b602b913960400191505060405180910390fd5b6001600160a01b038316600090815260056020526040902080548390811061098457fe5b9060005260206000200154905092915050565b6109138383836040518060200160405280600081525061108e565b60006109bc6108b6565b82106109f95760405162461bcd60e51b815260040180806020018281038252602c815260200180611fcf602c913960400191505060405180910390fd5b60078281548110610a0657fe5b90600052602060002001549050919050565b6060600080600e8481548110610a2a57fe5b9060005260206000209060020201600001600e8581548110610a4857fe5b906000526020600020906002020160010160009054906101000a900460ff16600e8681548110610a7457fe5b906000526020600020906002020160010160019054906101000a900460ff16828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b285780601f10610afd57610100808354040283529160200191610b28565b820191906000526020600020905b815481529060010190602001808311610b0b57829003601f168201915b505050505092509250925092509193909250565b610b44610f02565b610b95576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60006001600e604051806060016040528088888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250505060ff8089166020808501919091529088166040909301929092528354600181018086559482529082902083518051600290930290910192610c2492849290910190611ce2565b5060208201516001909101805460409093015160ff9081166101000261ff00199190931660ff199094169390931792909216179055039050610c66868261142f565b505050505050565b600e8181548110610c7b57fe5b60009182526020918290206002918202018054604080516001831615610100026000190190921693909304601f810185900485028201850190935282815290935091839190830182828015610d115780601f10610ce657610100808354040283529160200191610d11565b820191906000526020600020905b815481529060010190602001808311610cf457829003601f168201915b5050506001909301549192505060ff8082169161010090041683565b6000818152600160205260408120546001600160a01b031680610d815760405162461bcd60e51b8152600401808060200182810382526029815260200180611ed06029913960400191505060405180910390fd5b92915050565b600b8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107215780601f106106f657610100808354040283529160200191610721565b60006001600160a01b038216610e2f5760405162461bcd60e51b815260040180806020018281038252602a815260200180611ea6602a913960400191505060405180910390fd5b6001600160a01b0382166000908152600360205260409020610d8190611450565b610e58610f02565b610ea9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600d546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600d80546001600160a01b0319169055565b600d546001600160a01b031690565b600d546000906001600160a01b0316610f19611368565b6001600160a01b031614905090565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107215780601f106106f657610100808354040283529160200191610721565b610f91611368565b6001600160a01b0316826001600160a01b03161415610ff7576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000611004611368565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611048611368565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b61109f611099611368565b8361136c565b6110da5760405162461bcd60e51b8152600401808060200182810382526031815260200180611f9e6031913960400191505060405180910390fd5b6110e684848484611454565b50505050565b60606110f78261134b565b6111325760405162461bcd60e51b815260040180806020018281038252602f815260200180611f4e602f913960400191505060405180910390fd5b6000828152600c602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156111c75780601f1061119c576101008083540402835291602001916111c7565b820191906000526020600020905b8154815290600101906020018083116111aa57829003601f168201915b505050505090508051600014156111ee575050604080516020810190915260008152610690565b600b81604051602001808380546001816001161561010002031660029004801561124f5780601f1061122d57610100808354040283529182019161124f565b820191906000526020600020905b81548152906001019060200180831161123b575b5050825160208401908083835b6020831061127b5780518252601f19909201916020918201910161125c565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610690565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6112ee610f02565b61133f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b611348816114a6565b50565b6000908152600160205260409020546001600160a01b0316151590565b3390565b60006113778261134b565b6113b25760405162461bcd60e51b815260040180806020018281038252602c815260200180611e42602c913960400191505060405180910390fd5b60006113bd83610d2d565b9050806001600160a01b0316846001600160a01b031614806113f85750836001600160a01b03166113ed8461072c565b6001600160a01b0316145b80611408575061140881856112b8565b949350505050565b61141b838383611547565b611425838261168b565b6109138282611780565b61143982826117be565b6114438282611780565b61144c816118ef565b5050565b5490565b61145f848484611410565b61146b84848484611933565b6110e65760405162461bcd60e51b8152600401808060200182810382526032815260200180611dc66032913960400191505060405180910390fd5b6001600160a01b0381166114eb5760405162461bcd60e51b8152600401808060200182810382526026815260200180611df86026913960400191505060405180910390fd5b600d546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600d80546001600160a01b0319166001600160a01b0392909216919091179055565b826001600160a01b031661155a82610d2d565b6001600160a01b03161461159f5760405162461bcd60e51b8152600401808060200182810382526029815260200180611f256029913960400191505060405180910390fd5b6001600160a01b0382166115e45760405162461bcd60e51b8152600401808060200182810382526024815260200180611e1e6024913960400191505060405180910390fd5b6115ed81611b6e565b6001600160a01b038316600090815260036020526040902061160e90611ba9565b6001600160a01b038216600090815260036020526040902061162f90611bc0565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166000908152600560205260408120546116b590600163ffffffff611bc916565b600083815260066020526040902054909150808214611750576001600160a01b03841660009081526005602052604081208054849081106116f257fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061173057fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b0384166000908152600560205260409020805490611779906000198301611d60565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b6001600160a01b038216611819576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6118228161134b565b15611874576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600390915290206118b390611bc0565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6000611947846001600160a01b0316611c12565b61195357506001611408565b600060606001600160a01b038616630a85bd0160e11b611971611368565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156119ea5781810151838201526020016119d2565b50505050905090810190601f168015611a175780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b60208310611a7f5780518252601f199092019160209182019101611a60565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611ae1576040519150601f19603f3d011682016040523d82523d6000602084013e611ae6565b606091505b509150915081611b3757805115611b005780518082602001fd5b60405162461bcd60e51b8152600401808060200182810382526032815260200180611dc66032913960400191505060405180910390fd5b6000818060200190516020811015611b4e57600080fd5b50516001600160e01b031916630a85bd0160e11b14935061140892505050565b6000818152600260205260409020546001600160a01b03161561134857600090815260026020526040902080546001600160a01b0319169055565b8054611bbc90600163ffffffff611bc916565b9055565b80546001019055565b6000611c0b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c4b565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590611408575050151592915050565b60008184841115611cda5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611c9f578181015183820152602001611c87565b50505050905090810190601f168015611ccc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611d2357805160ff1916838001178555611d50565b82800160010185558215611d50579182015b82811115611d50578251825591602001919060010190611d35565b50611d5c929150611d80565b5090565b815481835581811115610913576000838152602090206109139181019083015b61072991905b80821115611d5c5760008155600101611d8656fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a72315820fcca9455d03483408a53b52ef1147aa264775d2d1e0d3c96d02920f69b35a63864736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80636352211e116100c357806395d89b411161007c57806395d89b4114610505578063a22cb4651461050d578063b88d4fde1461053b578063c87b56dd14610601578063e985e9c51461061e578063f2fde38b1461064c57610158565b80636352211e146104a25780636c0360eb146104bf57806370a08231146104c7578063715018a6146104ed5780638da5cb5b146104f55780638f32d59b146104fd57610158565b80632f745c59116101155780632f745c59146102cc57806342842e0e146102f85780634f6ccce71461032e578063576f7ea71461034b5780635c1d7a6a146103fa5780635e82866e1461048557610158565b806301ffc9a71461015d57806306fdde0314610198578063081812fc14610215578063095ea7b31461024e57806318160ddd1461027c57806323b872dd14610296575b600080fd5b6101846004803603602081101561017357600080fd5b50356001600160e01b031916610672565b604080519115158252519081900360200190f35b6101a0610695565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101da5781810151838201526020016101c2565b50505050905090810190601f1680156102075780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102326004803603602081101561022b57600080fd5b503561072c565b604080516001600160a01b039092168252519081900360200190f35b61027a6004803603604081101561026457600080fd5b506001600160a01b03813516906020013561078e565b005b6102846108b6565b60408051918252519081900360200190f35b61027a600480360360608110156102ac57600080fd5b506001600160a01b038135811691602081013590911690604001356108bc565b610284600480360360408110156102e257600080fd5b506001600160a01b038135169060200135610918565b61027a6004803603606081101561030e57600080fd5b506001600160a01b03813581169160208101359091169060400135610997565b6102846004803603602081101561034457600080fd5b50356109b2565b6103686004803603602081101561036157600080fd5b5035610a18565b60405180806020018460ff1660ff1681526020018360ff1660ff168152602001828103825285818151815260200191508051906020019080838360005b838110156103bd5781810151838201526020016103a5565b50505050905090810190601f1680156103ea5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61027a6004803603608081101561041057600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561043b57600080fd5b82018360208201111561044d57600080fd5b8035906020019184600183028401116401000000008311171561046f57600080fd5b919350915060ff81358116916020013516610b3c565b6103686004803603602081101561049b57600080fd5b5035610c6e565b610232600480360360208110156104b857600080fd5b5035610d2d565b6101a0610d87565b610284600480360360208110156104dd57600080fd5b50356001600160a01b0316610de8565b61027a610e50565b610232610ef3565b610184610f02565b6101a0610f28565b61027a6004803603604081101561052357600080fd5b506001600160a01b0381351690602001351515610f89565b61027a6004803603608081101561055157600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561058c57600080fd5b82018360208201111561059e57600080fd5b803590602001918460018302840111640100000000831117156105c057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061108e945050505050565b6101a06004803603602081101561061757600080fd5b50356110ec565b6101846004803603604081101561063457600080fd5b506001600160a01b03813581169160200135166112b8565b61027a6004803603602081101561066257600080fd5b50356001600160a01b03166112e6565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107215780601f106106f657610100808354040283529160200191610721565b820191906000526020600020905b81548152906001019060200180831161070457829003601f168201915b505050505090505b90565b60006107378261134b565b6107725760405162461bcd60e51b815260040180806020018281038252602c815260200180611ef9602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b600061079982610d2d565b9050806001600160a01b0316836001600160a01b031614156107ec5760405162461bcd60e51b8152600401808060200182810382526021815260200180611f7d6021913960400191505060405180910390fd5b806001600160a01b03166107fe611368565b6001600160a01b0316148061081f575061081f8161081a611368565b6112b8565b61085a5760405162461bcd60e51b8152600401808060200182810382526038815260200180611e6e6038913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b6108cd6108c7611368565b8261136c565b6109085760405162461bcd60e51b8152600401808060200182810382526031815260200180611f9e6031913960400191505060405180910390fd5b610913838383611410565b505050565b600061092383610de8565b82106109605760405162461bcd60e51b815260040180806020018281038252602b815260200180611d9b602b913960400191505060405180910390fd5b6001600160a01b038316600090815260056020526040902080548390811061098457fe5b9060005260206000200154905092915050565b6109138383836040518060200160405280600081525061108e565b60006109bc6108b6565b82106109f95760405162461bcd60e51b815260040180806020018281038252602c815260200180611fcf602c913960400191505060405180910390fd5b60078281548110610a0657fe5b90600052602060002001549050919050565b6060600080600e8481548110610a2a57fe5b9060005260206000209060020201600001600e8581548110610a4857fe5b906000526020600020906002020160010160009054906101000a900460ff16600e8681548110610a7457fe5b906000526020600020906002020160010160019054906101000a900460ff16828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b285780601f10610afd57610100808354040283529160200191610b28565b820191906000526020600020905b815481529060010190602001808311610b0b57829003601f168201915b505050505092509250925092509193909250565b610b44610f02565b610b95576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60006001600e604051806060016040528088888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250505060ff8089166020808501919091529088166040909301929092528354600181018086559482529082902083518051600290930290910192610c2492849290910190611ce2565b5060208201516001909101805460409093015160ff9081166101000261ff00199190931660ff199094169390931792909216179055039050610c66868261142f565b505050505050565b600e8181548110610c7b57fe5b60009182526020918290206002918202018054604080516001831615610100026000190190921693909304601f810185900485028201850190935282815290935091839190830182828015610d115780601f10610ce657610100808354040283529160200191610d11565b820191906000526020600020905b815481529060010190602001808311610cf457829003601f168201915b5050506001909301549192505060ff8082169161010090041683565b6000818152600160205260408120546001600160a01b031680610d815760405162461bcd60e51b8152600401808060200182810382526029815260200180611ed06029913960400191505060405180910390fd5b92915050565b600b8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107215780601f106106f657610100808354040283529160200191610721565b60006001600160a01b038216610e2f5760405162461bcd60e51b815260040180806020018281038252602a815260200180611ea6602a913960400191505060405180910390fd5b6001600160a01b0382166000908152600360205260409020610d8190611450565b610e58610f02565b610ea9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600d546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600d80546001600160a01b0319169055565b600d546001600160a01b031690565b600d546000906001600160a01b0316610f19611368565b6001600160a01b031614905090565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107215780601f106106f657610100808354040283529160200191610721565b610f91611368565b6001600160a01b0316826001600160a01b03161415610ff7576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000611004611368565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611048611368565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b61109f611099611368565b8361136c565b6110da5760405162461bcd60e51b8152600401808060200182810382526031815260200180611f9e6031913960400191505060405180910390fd5b6110e684848484611454565b50505050565b60606110f78261134b565b6111325760405162461bcd60e51b815260040180806020018281038252602f815260200180611f4e602f913960400191505060405180910390fd5b6000828152600c602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156111c75780601f1061119c576101008083540402835291602001916111c7565b820191906000526020600020905b8154815290600101906020018083116111aa57829003601f168201915b505050505090508051600014156111ee575050604080516020810190915260008152610690565b600b81604051602001808380546001816001161561010002031660029004801561124f5780601f1061122d57610100808354040283529182019161124f565b820191906000526020600020905b81548152906001019060200180831161123b575b5050825160208401908083835b6020831061127b5780518252601f19909201916020918201910161125c565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610690565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6112ee610f02565b61133f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b611348816114a6565b50565b6000908152600160205260409020546001600160a01b0316151590565b3390565b60006113778261134b565b6113b25760405162461bcd60e51b815260040180806020018281038252602c815260200180611e42602c913960400191505060405180910390fd5b60006113bd83610d2d565b9050806001600160a01b0316846001600160a01b031614806113f85750836001600160a01b03166113ed8461072c565b6001600160a01b0316145b80611408575061140881856112b8565b949350505050565b61141b838383611547565b611425838261168b565b6109138282611780565b61143982826117be565b6114438282611780565b61144c816118ef565b5050565b5490565b61145f848484611410565b61146b84848484611933565b6110e65760405162461bcd60e51b8152600401808060200182810382526032815260200180611dc66032913960400191505060405180910390fd5b6001600160a01b0381166114eb5760405162461bcd60e51b8152600401808060200182810382526026815260200180611df86026913960400191505060405180910390fd5b600d546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600d80546001600160a01b0319166001600160a01b0392909216919091179055565b826001600160a01b031661155a82610d2d565b6001600160a01b03161461159f5760405162461bcd60e51b8152600401808060200182810382526029815260200180611f256029913960400191505060405180910390fd5b6001600160a01b0382166115e45760405162461bcd60e51b8152600401808060200182810382526024815260200180611e1e6024913960400191505060405180910390fd5b6115ed81611b6e565b6001600160a01b038316600090815260036020526040902061160e90611ba9565b6001600160a01b038216600090815260036020526040902061162f90611bc0565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166000908152600560205260408120546116b590600163ffffffff611bc916565b600083815260066020526040902054909150808214611750576001600160a01b03841660009081526005602052604081208054849081106116f257fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061173057fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b0384166000908152600560205260409020805490611779906000198301611d60565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b6001600160a01b038216611819576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6118228161134b565b15611874576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600390915290206118b390611bc0565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6000611947846001600160a01b0316611c12565b61195357506001611408565b600060606001600160a01b038616630a85bd0160e11b611971611368565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156119ea5781810151838201526020016119d2565b50505050905090810190601f168015611a175780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b60208310611a7f5780518252601f199092019160209182019101611a60565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611ae1576040519150601f19603f3d011682016040523d82523d6000602084013e611ae6565b606091505b509150915081611b3757805115611b005780518082602001fd5b60405162461bcd60e51b8152600401808060200182810382526032815260200180611dc66032913960400191505060405180910390fd5b6000818060200190516020811015611b4e57600080fd5b50516001600160e01b031916630a85bd0160e11b14935061140892505050565b6000818152600260205260409020546001600160a01b03161561134857600090815260026020526040902080546001600160a01b0319169055565b8054611bbc90600163ffffffff611bc916565b9055565b80546001019055565b6000611c0b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c4b565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590611408575050151592915050565b60008184841115611cda5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611c9f578181015183820152602001611c87565b50505050905090810190601f168015611ccc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611d2357805160ff1916838001178555611d50565b82800160010185558215611d50579182015b82811115611d50578251825591602001919060010190611d35565b50611d5c929150611d80565b5090565b815481835581811115610913576000838152602090206109139181019083015b61072991905b80821115611d5c5760008155600101611d8656fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a72315820fcca9455d03483408a53b52ef1147aa264775d2d1e0d3c96d02920f69b35a63864736f6c63430005100032",
  "sourceMap": "206:962:0:-;;;407:59;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;456:155:18;;;;;;;;;;;-1:-1:-1;;;456:155:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;456:155:18;;;;;;;718:40:9;-1:-1:-1;;;;;;;;718:18:9;:40;:::i;:::-;2262::16;-1:-1:-1;;;;;;;;2262:18:16;:40;:::i;:::-;1357:51:17;-1:-1:-1;;;;;;;;1357:18:17;:51;:::i;:::-;912:12:19;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;934:16:19;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1038:49:19;-1:-1:-1;;;;;;;;1038:18:19;:49;:::i;:::-;840:254;;456:155:18;;698:17:12;718:12;:10;;;:12;;:::i;:::-;740:6;:18;;-1:-1:-1;;;;;;740:18:12;-1:-1:-1;;;;;740:18:12;;;;;;;;773:43;;740:18;;-1:-1:-1;740:18:12;-1:-1:-1;;773:43:12;;-1:-1:-1;;773:43:12;664:159;206:962:0;;1442:190:9;-1:-1:-1;;;;;;1517:25:9;;;;;1509:66;;;;;-1:-1:-1;;;1509:66:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1585:33:9;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1585:40:9;1621:4;1585:40;;;1442:190::o;788:96:7:-;867:10;788:96;;:::o;206:962:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;206:962:0;;;-1:-1:-1;206:962:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "206:962:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;206:962:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;915:133:9;-1:-1:-1;;;;;;915:133:9;;:::i;:::-;;;;;;;;;;;;;;;;;;1199:83:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1199:83:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4283:200:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4283:200:16;;:::i;:::-;;;;-1:-1:-1;;;;;4283:200:16;;;;;;;;;;;;;;3583:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3583:415:16;;;;;;;;:::i;:::-;;2171:94:17;;;:::i;:::-;;;;;;;;;;;;;;;;5929:287:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5929:287:16;;;;;;;;;;;;;;;;;:::i;1789:229:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1789:229:17;;;;;;;;:::i;6865:132:16:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6865:132:16;;;;;;;;;;;;;;;;;:::i;2603:196:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2603:196:17;;:::i;912:254:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;912:254:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;912:254:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:318;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;510:318:0;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;510:318:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;510:318:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;510:318:0;;-1:-1:-1;510:318:0;-1:-1:-1;510:318:0;;;;;;;;;;;:::i;372:30::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;372:30:0;;:::i;2939:223:16:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2939:223:16;;:::i;3387:89:19:-;;;:::i;2513:207:16:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2513:207:16;-1:-1:-1;;;;;2513:207:16;;:::i;1684:137:12:-;;;:::i;899:77::-;;;:::i;1250:92::-;;;:::i;1391:87:19:-;;;:::i;4776:249:16:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4776:249:16;;;;;;;;;;:::i;7720:269::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7720:269:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7720:269:16;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7720:269:16;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7720:269:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7720:269:16;;-1:-1:-1;7720:269:16;;-1:-1:-1;;;;;7720:269:16:i;1781:545:19:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1781:545:19;;:::i;5347:145:16:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5347:145:16;;;;;;;;;;:::i;1970:107:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1970:107:12;-1:-1:-1;;;;;1970:107:12;;:::i;915:133:9:-;-1:-1:-1;;;;;;1008:33:9;;985:4;1008:33;;;;;;;;;;;;;915:133;;;;:::o;1199:83:19:-;1270:5;1263:12;;;;;;;;-1:-1:-1;;1263:12:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1238:13;;1263:12;;1270:5;;1263:12;;1270:5;1263:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:83;;:::o;4283:200:16:-;4342:7;4369:16;4377:7;4369;:16::i;:::-;4361:73;;;;-1:-1:-1;;;4361:73:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4452:24:16;;;;:15;:24;;;;;;-1:-1:-1;;;;;4452:24:16;;4283:200::o;3583:415::-;3646:13;3662:16;3670:7;3662;:16::i;:::-;3646:32;;3702:5;-1:-1:-1;;;;;3696:11:16;:2;-1:-1:-1;;;;;3696:11:16;;;3688:57;;;;-1:-1:-1;;;3688:57:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3780:5;-1:-1:-1;;;;;3764:21:16;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3764:21:16;;:62;;;;3789:37;3806:5;3813:12;:10;:12::i;:::-;3789:16;:37::i;:::-;3756:152;;;;-1:-1:-1;;;3756:152:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3919:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3919:29:16;-1:-1:-1;;;;;3919:29:16;;;;;;;;;3963:28;;3919:24;;3963:28;;;;;;;3583:415;;;:::o;2171:94:17:-;2241:10;:17;2171:94;:::o;5929:287:16:-;6071:41;6090:12;:10;:12::i;:::-;6104:7;6071:18;:41::i;:::-;6063:103;;;;-1:-1:-1;;;6063:103:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6177:32;6191:4;6197:2;6201:7;6177:13;:32::i;:::-;5929:287;;;:::o;1789:229:17:-;1869:7;1904:16;1914:5;1904:9;:16::i;:::-;1896:5;:24;1888:80;;;;-1:-1:-1;;;1888:80:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1985:19:17;;;;;;:12;:19;;;;;:26;;2005:5;;1985:26;;;;;;;;;;;;;;1978:33;;1789:229;;;;:::o;6865:132:16:-;6951:39;6968:4;6974:2;6978:7;6951:39;;;;;;;;;;;;:16;:39::i;2603:196:17:-;2661:7;2696:13;:11;:13::i;:::-;2688:5;:21;2680:78;;;;-1:-1:-1;;;2680:78:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2775:10;2786:5;2775:17;;;;;;;;;;;;;;;;2768:24;;2603:196;;;:::o;912:254:0:-;978:19;1003:14;1023:10;1059:11;1071:7;1059:20;;;;;;;;;;;;;;;;;;:26;;1093:11;1105:7;1093:20;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;1130:11;1142:7;1130:20;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;1044:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;912:254;;;;;:::o;510:318::-;1103:9:12;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;651:12:0;788:1;666:11;690:89;;;;;;;;717:5;;690:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;-1:-1;690:89:0;;;-1:-1:-1;;;690:89:0;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;666:119:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;666:119:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;666:119:0;;;;-1:-1:-1;;666:119:0;;;;;;;;;;;;;;:123;;-1:-1:-1;795:28:0;801:12;666:123;795:5;:28::i;:::-;1159:1:12;510:318:0;;;;;:::o;372:30::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;372:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;372:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;372:30:0;;;;;;;-1:-1:-1;;372:30:0;;;;;;;;;;:::o;2939:223:16:-;2994:7;3029:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3029:20:16;3067:19;3059:73;;;;-1:-1:-1;;;3059:73:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3150:5;2939:223;-1:-1:-1;;2939:223:16:o;3387:89:19:-;3461:8;3454:15;;;;;;;;-1:-1:-1;;3454:15:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:13;;3454:15;;3461:8;;3454:15;;3461:8;3454:15;;;;;;;;;;;;;;;;;;;;;;;;2513:207:16;2568:7;-1:-1:-1;;;;;2595:19:16;;2587:74;;;;-1:-1:-1;;;2587:74:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2679:24:16;;;;;;:17;:24;;;;;:34;;:32;:34::i;1684:137:12:-;1103:9;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1766:6;;1745:40;;1782:1;;-1:-1:-1;;;;;1766:6:12;;1745:40;;1782:1;;1745:40;1795:6;:19;;-1:-1:-1;;;;;;1795:19:12;;;1684:137::o;899:77::-;963:6;;-1:-1:-1;;;;;963:6:12;899:77;:::o;1250:92::-;1329:6;;1290:4;;-1:-1:-1;;;;;1329:6:12;1313:12;:10;:12::i;:::-;-1:-1:-1;;;;;1313:22:12;;1306:29;;1250:92;:::o;1391:87:19:-;1464:7;1457:14;;;;;;;;-1:-1:-1;;1457:14:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1432:13;;1457:14;;1464:7;;1457:14;;1464:7;1457:14;;;;;;;;;;;;;;;;;;;;;;;;4776:249:16;4861:12;:10;:12::i;:::-;-1:-1:-1;;;;;4855:18:16;:2;-1:-1:-1;;;;;4855:18:16;;;4847:56;;;;;-1:-1:-1;;;4847:56:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;4953:8;4914:18;:32;4933:12;:10;:12::i;:::-;-1:-1:-1;;;;;4914:32:16;;;;;;;;;;;;;;;;;-1:-1:-1;4914:32:16;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;4914:47:16;;;;;;;;;;;4991:12;:10;:12::i;:::-;4976:42;;;;;;;;;;-1:-1:-1;;;;;4976:42:16;;;;;;;;;;;;;;4776:249;;:::o;7720:269::-;7834:41;7853:12;:10;:12::i;:::-;7867:7;7834:18;:41::i;:::-;7826:103;;;;-1:-1:-1;;;7826:103:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7939:43;7957:4;7963:2;7967:7;7976:5;7939:17;:43::i;:::-;7720:269;;;;:::o;1781:545:19:-;1839:13;1872:16;1880:7;1872;:16::i;:::-;1864:76;;;;-1:-1:-1;;;1864:76:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1977:19;;;;:10;:19;;;;;;;;;1951:45;;;;;;-1:-1:-1;;1951:45:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;1977:19;1951:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2110:9;2104:23;2131:1;2104:28;2100:220;;;-1:-1:-1;;2148:9:19;;;;;;;;;-1:-1:-1;2148:9:19;;;;2100:220;2288:8;2298:9;2271:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2271:37:19;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2271:37:19;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2271:37:19;;;2257:52;;;;;5347:145:16;-1:-1:-1;;;;;5450:25:16;;;5427:4;5450:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5347:145::o;1970:107:12:-;1103:9;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;9158:152:16:-;9215:4;9247:20;;;:11;:20;;;;;;-1:-1:-1;;;;;9247:20:16;9284:19;;;9158:152::o;788:96:7:-;867:10;788:96;:::o;9671:329:16:-;9756:4;9780:16;9788:7;9780;:16::i;:::-;9772:73;;;;-1:-1:-1;;;9772:73:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9855:13;9871:16;9879:7;9871;:16::i;:::-;9855:32;;9916:5;-1:-1:-1;;;;;9905:16:16;:7;-1:-1:-1;;;;;9905:16:16;;:51;;;;9949:7;-1:-1:-1;;;;;9925:31:16;:20;9937:7;9925:11;:20::i;:::-;-1:-1:-1;;;;;9925:31:16;;9905:51;:87;;;;9960:32;9977:5;9984:7;9960:16;:32::i;:::-;9897:96;9671:329;-1:-1:-1;;;;9671:329:16:o;3174:239:17:-;3259:38;3279:4;3285:2;3289:7;3259:19;:38::i;:::-;3308:47;3341:4;3347:7;3308:32;:47::i;:::-;3366:40;3394:2;3398:7;3366:27;:40::i;3670:196::-;3733:24;3745:2;3749:7;3733:11;:24::i;:::-;3768:40;3796:2;3800:7;3768:27;:40::i;:::-;3819;3851:7;3819:31;:40::i;:::-;3670:196;;:::o;1065:112:8:-;1156:14;;1065:112::o;8694:269:16:-;8803:32;8817:4;8823:2;8827:7;8803:13;:32::i;:::-;8853:48;8876:4;8882:2;8886:7;8895:5;8853:22;:48::i;:::-;8845:111;;;;-1:-1:-1;;;8845:111:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2178:225:12;-1:-1:-1;;;;;2251:22:12;;2243:73;;;;-1:-1:-1;;;2243:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2352:6;;2331:38;;-1:-1:-1;;;;;2331:38:12;;;;2352:6;;2331:38;;2352:6;;2331:38;2379:6;:17;;-1:-1:-1;;;;;;2379:17:12;-1:-1:-1;;;;;2379:17:12;;;;;;;;;;2178:225::o;13281:447:16:-;13394:4;-1:-1:-1;;;;;13374:24:16;:16;13382:7;13374;:16::i;:::-;-1:-1:-1;;;;;13374:24:16;;13366:78;;;;-1:-1:-1;;;13366:78:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13462:16:16;;13454:65;;;;-1:-1:-1;;;13454:65:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13530:23;13545:7;13530:14;:23::i;:::-;-1:-1:-1;;;;;13564:23:16;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;13609:21:16;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;13653:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;13653:25:16;-1:-1:-1;;;;;13653:25:16;;;;;;;;;13694:27;;13653:20;;13694:27;;;;;;;13281:447;;;:::o;6284:1128:17:-;-1:-1:-1;;;;;6571:18:17;;6546:22;6571:18;;;:12;:18;;;;;:25;:32;;6601:1;6571:32;:29;:32;:::i;:::-;6613:18;6634:26;;;:17;:26;;;;;;6546:57;;-1:-1:-1;6764:28:17;;;6760:323;;-1:-1:-1;;;;;6830:18:17;;6808:19;6830:18;;;:12;:18;;;;;:34;;6849:14;;6830:34;;;;;;;;;;;;;;6808:56;;6912:11;6879:12;:18;6892:4;-1:-1:-1;;;;;6879:18:17;-1:-1:-1;;;;;6879:18:17;;;;;;;;;;;;6898:10;6879:30;;;;;;;;;;;;;;;;;;;:44;;;;6995:30;;;:17;:30;;;;;:43;;;6760:323;-1:-1:-1;;;;;7169:18:17;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;7169:27:17;;;:::i;:::-;;6284:1128;;;;:::o;5128:183::-;-1:-1:-1;;;;;5241:16:17;;;;;;;:12;:16;;;;;;;;:23;;5212:26;;;:17;:26;;;;;:52;;;5274:16;;;39:1:-1;23:18;;45:23;;5274:30:17;;;;;;;;5128:183::o;11714:327:16:-;-1:-1:-1;;;;;11785:16:16;;11777:61;;;;;-1:-1:-1;;;11777:61:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11857:16;11865:7;11857;:16::i;:::-;11856:17;11848:58;;;;;-1:-1:-1;;;11848:58:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;11917:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;11917:25:16;-1:-1:-1;;;;;11917:25:16;;;;;;;;11952:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;12001;;12026:7;;-1:-1:-1;;;;;12001:33:16;;;12018:1;;12001:33;;12018:1;;12001:33;11714:327;;:::o;5506:161:17:-;5609:10;:17;;5582:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5636:24:17;;;;;;;5506:161::o;14367:1051:16:-;14488:4;14513:15;:2;-1:-1:-1;;;;;14513:13:16;;:15::i;:::-;14508:58;;-1:-1:-1;14551:4:16;14544:11;;14508:58;14635:12;14649:23;-1:-1:-1;;;;;14676:7:16;;-1:-1:-1;;;14779:12:16;:10;:12::i;:::-;14805:4;14823:7;14844:5;14684:175;;;;;;-1:-1:-1;;;;;14684:175:16;-1:-1:-1;;;;;14684:175:16;;;;;;-1:-1:-1;;;;;14684:175:16;-1:-1:-1;;;;;14684:175:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14684:175:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14684:175:16;;;-1:-1:-1;;26:21;;;22:32;6:49;;14684:175:16;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;14684:175:16;;;179:29:-1;;;;160:49;;14676:184:16;;;14684:175;;14676:184;;-1:-1:-1;14676:184:16;;-1:-1:-1;25:18;-1:-1;14676:184:16;-1:-1:-1;14676:184:16;;-1:-1:-1;14676:184:16;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;14676:184:16;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14634:226:16;;;;14875:7;14870:542;;14902:17;;:21;14898:376;;15067:10;15061:17;15127:15;15114:10;15110:2;15106:19;15099:44;15016:145;15199:60;;-1:-1:-1;;;15199:60:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14870:542;15304:13;15331:10;15320:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15320:32:16;-1:-1:-1;;;;;;15374:26:16;-1:-1:-1;;;15374:26:16;;-1:-1:-1;15366:35:16;;-1:-1:-1;;;15366:35:16;15580:171;15679:1;15643:24;;;:15;:24;;;;;;-1:-1:-1;;;;;15643:24:16;:38;15639:106;;15732:1;15697:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;15697:37:16;;;15580:171::o;1367:108:8:-;1447:14;;:21;;1466:1;1447:21;:18;:21;:::i;:::-;1430:38;;1367:108::o;1183:178::-;1335:19;;1353:1;1335:19;;;1183:178::o;1274:134:11:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:11:o;686:610:24:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;;1273:15:24;;;1238:51;-1:-1:-1;;686:610:24:o;1732:187:11:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:11;;;1732:187::o;206:962:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;206:962:0;;;-1:-1:-1;206:962:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.2;\n\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n\n/**\n * @title BitflixNFT: a ERC721 token\n */\ncontract BitflixNFT is ERC721Full, Ownable {\n\n  struct TokenInfo {\n    string title;\n    uint8 class_id;\n    uint8 size;\n  }\n\n  /* Our tokeninfo are stored here */\n  TokenInfo[] public token_infos;\n\n  constructor() public ERC721Full(\"BitflixNFT\", \"BNFT\") {\n  }\n\n  /**\n   * @dev Creates a new NFT\n   */\n  function createNFT(\n    address user_address,\n    string calldata title,\n    uint8 class_id,\n    uint8 size\n    ) external onlyOwner() {\n    uint tokenId = token_infos.push(\n      TokenInfo({\n        title: title,\n        class_id: class_id,\n        size: size\n      })\n    ) - 1;\n    _mint(user_address, tokenId);\n  }\n\n  /**\n   * @dev Gets a NFT\n   * @return The title and the size of the NFT\n   */\n  function getNFT(\n    uint tokenId\n  ) external view returns (\n    string memory title,\n    uint8 class_id,\n    uint8 size\n  ) {\n    return (\n      token_infos[tokenId].title,\n      token_infos[tokenId].class_id,\n      token_infos[tokenId].size\n    );\n  }\n}\n",
  "sourcePath": "/Users/yxf/app/bitflix-nft-marketplace/contracts/ERC721/BitflixNFT.sol",
  "ast": {
    "absolutePath": "/Users/yxf/app/bitflix-nft-marketplace/contracts/ERC721/BitflixNFT.sol",
    "exportedSymbols": {
      "BitflixNFT": [
        84
      ]
    },
    "id": 85,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 85,
        "sourceUnit": 3160,
        "src": "25:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 85,
        "sourceUnit": 1593,
        "src": "95:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3159,
              "src": "229:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$3159",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "229:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1592,
              "src": "241:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1592",
                "typeString": "contract Ownable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "241:7:0"
          }
        ],
        "contractDependencies": [
          1176,
          1277,
          1287,
          1592,
          2795,
          3135,
          3159,
          3332,
          3435,
          3462,
          3485
        ],
        "contractKind": "contract",
        "documentation": "@title BitflixNFT: a ERC721 token",
        "fullyImplemented": true,
        "id": 84,
        "linearizedBaseContracts": [
          84,
          1592,
          3159,
          3332,
          3485,
          3135,
          3462,
          2795,
          3435,
          1277,
          1287,
          1176
        ],
        "name": "BitflixNFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "BitflixNFT.TokenInfo",
            "id": 14,
            "members": [
              {
                "constant": false,
                "id": 9,
                "name": "title",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "277:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 8,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "277:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "name": "class_id",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "295:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "295:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "name": "size",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "315:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "315:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "TokenInfo",
            "nodeType": "StructDefinition",
            "scope": 84,
            "src": "254:76:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 17,
            "name": "token_infos",
            "nodeType": "VariableDeclaration",
            "scope": 84,
            "src": "372:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TokenInfo_$14_storage_$dyn_storage",
              "typeString": "struct BitflixNFT.TokenInfo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 15,
                "name": "TokenInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 14,
                "src": "372:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenInfo_$14_storage_ptr",
                  "typeString": "struct BitflixNFT.TokenInfo"
                }
              },
              "id": 16,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "372:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TokenInfo_$14_storage_$dyn_storage_ptr",
                "typeString": "struct BitflixNFT.TokenInfo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "461:5:0",
              "statements": []
            },
            "documentation": null,
            "id": 25,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "426974666c69784e4654",
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "439:12:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7bd7650fa6bd24c485fd43c0870b6208b51be262aceab065ae26897b0da567a8",
                      "typeString": "literal_string \"BitflixNFT\""
                    },
                    "value": "BitflixNFT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "424e4654",
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "453:6:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9e6745b3cfc67f270bc8e59f2a9eb2eade3f9ba1f67e62d12af610af4cc76070",
                      "typeString": "literal_string \"BNFT\""
                    },
                    "value": "BNFT"
                  }
                ],
                "id": 22,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3159,
                  "src": "428:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$3159_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "428:32:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "418:2:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "461:0:0"
            },
            "scope": 84,
            "src": "407:59:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "645:183:0",
              "statements": [
                {
                  "assignments": [
                    39
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 56,
                      "src": "651:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "651:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 50,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 43,
                              "name": "title",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "717:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 44,
                              "name": "class_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 45,
                              "name": "size",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "766:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 42,
                            "name": "TokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "690:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TokenInfo_$14_storage_ptr_$",
                              "typeString": "type(struct BitflixNFT.TokenInfo storage pointer)"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "title",
                            "class_id",
                            "size"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "690:89:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$14_memory",
                            "typeString": "struct BitflixNFT.TokenInfo memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TokenInfo_$14_memory",
                            "typeString": "struct BitflixNFT.TokenInfo memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 40,
                          "name": "token_infos",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "666:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TokenInfo_$14_storage_$dyn_storage",
                            "typeString": "struct BitflixNFT.TokenInfo storage ref[] storage ref"
                          }
                        },
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "666:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_TokenInfo_$14_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct BitflixNFT.TokenInfo storage ref) returns (uint256)"
                        }
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "666:119:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "788:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "666:123:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "651:138:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "user_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "801:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 53,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "815:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2942
                      ],
                      "referencedDeclaration": 2942,
                      "src": "795:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "795:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "795:28:0"
                }
              ]
            },
            "documentation": "@dev Creates a new NFT",
            "id": 57,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 36,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 35,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1525,
                  "src": "633:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "633:11:0"
              }
            ],
            "name": "createNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "name": "user_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "534:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "name": "title",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "560:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "class_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "587:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "name": "size",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "607:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "528:95:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:0:0"
            },
            "scope": 84,
            "src": "510:318:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "1038:128:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 68,
                            "name": "token_infos",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1059:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TokenInfo_$14_storage_$dyn_storage",
                              "typeString": "struct BitflixNFT.TokenInfo storage ref[] storage ref"
                            }
                          },
                          "id": 70,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 69,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "1071:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1059:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$14_storage",
                            "typeString": "struct BitflixNFT.TokenInfo storage ref"
                          }
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "title",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "1059:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 72,
                            "name": "token_infos",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1093:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TokenInfo_$14_storage_$dyn_storage",
                              "typeString": "struct BitflixNFT.TokenInfo storage ref[] storage ref"
                            }
                          },
                          "id": 74,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 73,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "1105:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1093:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$14_storage",
                            "typeString": "struct BitflixNFT.TokenInfo storage ref"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "class_id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "1093:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 76,
                            "name": "token_infos",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1130:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TokenInfo_$14_storage_$dyn_storage",
                              "typeString": "struct BitflixNFT.TokenInfo storage ref[] storage ref"
                            }
                          },
                          "id": 78,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 77,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "1142:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1130:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$14_storage",
                            "typeString": "struct BitflixNFT.TokenInfo storage ref"
                          }
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "1130:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 80,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1051:110:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(string storage ref,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 67,
                  "id": 81,
                  "nodeType": "Return",
                  "src": "1044:117:0"
                }
              ]
            },
            "documentation": "@dev Gets a NFT\n@return The title and the size of the NFT",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "933:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "933:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "927:22:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "name": "title",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "978:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "name": "class_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1003:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "name": "size",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1023:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "972:65:0"
            },
            "scope": 84,
            "src": "912:254:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 85,
        "src": "206:962:0"
      }
    ],
    "src": "0:1169:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/yxf/app/bitflix-nft-marketplace/contracts/ERC721/BitflixNFT.sol",
    "exportedSymbols": {
      "BitflixNFT": [
        84
      ]
    },
    "id": 85,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 85,
        "sourceUnit": 3160,
        "src": "25:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 85,
        "sourceUnit": 1593,
        "src": "95:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3159,
              "src": "229:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$3159",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "229:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1592,
              "src": "241:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1592",
                "typeString": "contract Ownable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "241:7:0"
          }
        ],
        "contractDependencies": [
          1176,
          1277,
          1287,
          1592,
          2795,
          3135,
          3159,
          3332,
          3435,
          3462,
          3485
        ],
        "contractKind": "contract",
        "documentation": "@title BitflixNFT: a ERC721 token",
        "fullyImplemented": true,
        "id": 84,
        "linearizedBaseContracts": [
          84,
          1592,
          3159,
          3332,
          3485,
          3135,
          3462,
          2795,
          3435,
          1277,
          1287,
          1176
        ],
        "name": "BitflixNFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "BitflixNFT.TokenInfo",
            "id": 14,
            "members": [
              {
                "constant": false,
                "id": 9,
                "name": "title",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "277:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 8,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "277:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "name": "class_id",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "295:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "295:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "name": "size",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "315:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "315:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "TokenInfo",
            "nodeType": "StructDefinition",
            "scope": 84,
            "src": "254:76:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 17,
            "name": "token_infos",
            "nodeType": "VariableDeclaration",
            "scope": 84,
            "src": "372:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TokenInfo_$14_storage_$dyn_storage",
              "typeString": "struct BitflixNFT.TokenInfo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 15,
                "name": "TokenInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 14,
                "src": "372:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenInfo_$14_storage_ptr",
                  "typeString": "struct BitflixNFT.TokenInfo"
                }
              },
              "id": 16,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "372:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TokenInfo_$14_storage_$dyn_storage_ptr",
                "typeString": "struct BitflixNFT.TokenInfo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "461:5:0",
              "statements": []
            },
            "documentation": null,
            "id": 25,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "426974666c69784e4654",
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "439:12:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7bd7650fa6bd24c485fd43c0870b6208b51be262aceab065ae26897b0da567a8",
                      "typeString": "literal_string \"BitflixNFT\""
                    },
                    "value": "BitflixNFT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "424e4654",
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "453:6:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9e6745b3cfc67f270bc8e59f2a9eb2eade3f9ba1f67e62d12af610af4cc76070",
                      "typeString": "literal_string \"BNFT\""
                    },
                    "value": "BNFT"
                  }
                ],
                "id": 22,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 19,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3159,
                  "src": "428:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$3159_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "428:32:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "418:2:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "461:0:0"
            },
            "scope": 84,
            "src": "407:59:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "645:183:0",
              "statements": [
                {
                  "assignments": [
                    39
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 56,
                      "src": "651:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "651:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 50,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 43,
                              "name": "title",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "717:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 44,
                              "name": "class_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 45,
                              "name": "size",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "766:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 42,
                            "name": "TokenInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "690:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TokenInfo_$14_storage_ptr_$",
                              "typeString": "type(struct BitflixNFT.TokenInfo storage pointer)"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "title",
                            "class_id",
                            "size"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "690:89:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$14_memory",
                            "typeString": "struct BitflixNFT.TokenInfo memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TokenInfo_$14_memory",
                            "typeString": "struct BitflixNFT.TokenInfo memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 40,
                          "name": "token_infos",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "666:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TokenInfo_$14_storage_$dyn_storage",
                            "typeString": "struct BitflixNFT.TokenInfo storage ref[] storage ref"
                          }
                        },
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "666:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_TokenInfo_$14_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct BitflixNFT.TokenInfo storage ref) returns (uint256)"
                        }
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "666:119:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "788:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "666:123:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "651:138:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "user_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "801:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 53,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "815:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2942
                      ],
                      "referencedDeclaration": 2942,
                      "src": "795:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "795:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "795:28:0"
                }
              ]
            },
            "documentation": "@dev Creates a new NFT",
            "id": 57,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 36,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 35,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1525,
                  "src": "633:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "633:11:0"
              }
            ],
            "name": "createNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "name": "user_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "534:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "name": "title",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "560:21:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "class_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "587:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "name": "size",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "607:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "528:95:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:0:0"
            },
            "scope": 84,
            "src": "510:318:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "1038:128:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 68,
                            "name": "token_infos",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1059:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TokenInfo_$14_storage_$dyn_storage",
                              "typeString": "struct BitflixNFT.TokenInfo storage ref[] storage ref"
                            }
                          },
                          "id": 70,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 69,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "1071:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1059:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$14_storage",
                            "typeString": "struct BitflixNFT.TokenInfo storage ref"
                          }
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "title",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "1059:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 72,
                            "name": "token_infos",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1093:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TokenInfo_$14_storage_$dyn_storage",
                              "typeString": "struct BitflixNFT.TokenInfo storage ref[] storage ref"
                            }
                          },
                          "id": 74,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 73,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "1105:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1093:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$14_storage",
                            "typeString": "struct BitflixNFT.TokenInfo storage ref"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "class_id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "1093:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 76,
                            "name": "token_infos",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1130:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_TokenInfo_$14_storage_$dyn_storage",
                              "typeString": "struct BitflixNFT.TokenInfo storage ref[] storage ref"
                            }
                          },
                          "id": 78,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 77,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "1142:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1130:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenInfo_$14_storage",
                            "typeString": "struct BitflixNFT.TokenInfo storage ref"
                          }
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "size",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "1130:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 80,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1051:110:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(string storage ref,uint8,uint8)"
                    }
                  },
                  "functionReturnParameters": 67,
                  "id": 81,
                  "nodeType": "Return",
                  "src": "1044:117:0"
                }
              ]
            },
            "documentation": "@dev Gets a NFT\n@return The title and the size of the NFT",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "933:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "933:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "927:22:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "name": "title",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "978:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "name": "class_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1003:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "name": "size",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "1023:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "972:65:0"
            },
            "scope": 84,
            "src": "912:254:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 85,
        "src": "206:962:0"
      }
    ],
    "src": "0:1169:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x42f8555E716f73fC89e8AC0A462bb86FaE26bB2e",
      "transactionHash": "0x11baebe82196c7d610a64721f21152d47df7d4feb24081e4bdc034fe2621453d"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-06-16T03:55:40.035Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.    * _Available since v2.5.0._"
      },
      "createNFT(address,string,uint8,uint8)": {
        "details": "Creates a new NFT"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "getNFT(uint256)": {
        "details": "Gets a NFT",
        "return": "The title and the size of the NFT"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "BitflixNFT: a ERC721 token"
  },
  "userdoc": {
    "methods": {}
  }
}